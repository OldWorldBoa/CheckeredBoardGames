{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"BoardBu",
				"ChessBoardBuilder\tproperty"
			],
			[
				"ab",
				"AbstractBoardPieceFactory\tproperty"
			],
			[
				"movement",
				"movementJudgeFactory\tparameter"
			],
			[
				"Move",
				"MovementJudgeFactory\tproperty"
			],
			[
				"BoardBuild",
				"BoardBuilderFactory\tproperty"
			],
			[
				"create",
				"createBoardBuilder\tmethod"
			],
			[
				"Game",
				"GameStateProcessor\tscript"
			],
			[
				"origin",
				"originPiece\tlet"
			],
			[
				"proces",
				"processEnPassant\tmethod"
			],
			[
				"rook",
				"rookAtDestination\tlet"
			],
			[
				"get",
				"getCasltingRookOrigin\tmethod"
			],
			[
				"King",
				"KingMovementJudge\talias"
			],
			[
				"r",
				"getCasltingRookCoordinate\tmethod"
			],
			[
				"isl",
				"isLegalFirstMove\tproperty"
			],
			[
				"orig",
				"origPiece\tlet"
			],
			[
				"Board",
				"BoardPieceType\talias"
			],
			[
				"dest",
				"destination\tproperty"
			],
			[
				"move",
				"movementData\tparameter"
			],
			[
				"movem",
				"movementVector\tlet"
			],
			[
				"isvale",
				"isValidFirstPawnMove\tmethod"
			],
			[
				"movemen",
				"movementData\tparameter"
			],
			[
				"Movement",
				"movementData"
			],
			[
				"Moveme",
				"movementData"
			],
			[
				"piece",
				"movedPieces\tproperty"
			],
			[
				"kin",
				"KingMovementJudge\tscript"
			],
			[
				"arepi",
				"arePiecesInPlaceForKingsideCastle"
			],
			[
				"arp",
				"arePiecesInPlaceForQueensideCastle"
			],
			[
				"setClear",
				"setClearColor\tmethod"
			],
			[
				"Ki",
				"Knight\tenum member"
			],
			[
				"set",
				"setTeamColor\tmethod"
			],
			[
				"trans",
				"translateX\tmethod"
			],
			[
				"setfrom",
				"setFromObject\tmethod"
			],
			[
				"add",
				"addOrbitControls\tmethod"
			],
			[
				"board",
				"boardPromise\tlet"
			],
			[
				"Object",
				"Object3D\talias"
			],
			[
				"Chess",
				"ChessPieceGeometryFactory\tscript"
			],
			[
				"testab",
				"TestAbstractBoardPieceGeometryFactory\tscript"
			],
			[
				"TestBoard",
				"TestBoardPieceFactory\tscript"
			],
			[
				"BoardP",
				"BoardPieceFactory\tscript"
			],
			[
				"crea",
				"createBoardPieceGeometryFactory\tmethod"
			],
			[
				"c",
				"chessPieceFactory"
			],
			[
				"Abstr",
				"AbstractBoardPieceFactory\talias"
			],
			[
				"Testb",
				"TestBoardPieceFactory\tscript"
			],
			[
				"BoardPi",
				"BoardPieceFactory"
			],
			[
				"creat",
				"createBoardPiece\tmethod"
			],
			[
				"BoardPiece",
				"BoardPieceGeometryFactory"
			],
			[
				"TEst",
				"TestBoardPieceGeometryFactory\tscript"
			],
			[
				"Test",
				"TestBoardPieceGeometryFactory"
			],
			[
				"b",
				"boardPieceGeometryFactory\tproperty"
			],
			[
				"boardpi",
				"BoardPieceGeometryFactory\tproperty"
			],
			[
				"B",
				"Bishop\tenum member"
			],
			[
				"Ba",
				"BoardPieceType\tscript"
			],
			[
				"BoardGame",
				"BoardGameScene"
			],
			[
				"toF",
				"toFunction\tmethod"
			],
			[
				"to",
				"toSelf\tmethod"
			],
			[
				"on",
				"onClickCallback\tproperty"
			],
			[
				"rend",
				"renderer\tproperty"
			],
			[
				"gamem",
				"gameMediatorFactory\tparameter"
			],
			[
				"game",
				"gameMediator\tproperty"
			],
			[
				"gameMida",
				"GameMediatorFactory"
			],
			[
				"inject",
				"injectable\talias"
			],
			[
				"testmove",
				"TestMovementJudgeFactory\tscript"
			],
			[
				"testbo",
				"TestBoardBuilderFactory\tscript"
			],
			[
				"test",
				"TestMovementJudgeFactory"
			],
			[
				"is",
				"isLegalFirstMove\tproperty"
			],
			[
				"chess",
				"ChessMovementJudge\tscript"
			],
			[
				"Ches",
				"ChessMediator\tscript"
			],
			[
				"mos",
				"onMouseClick\tmethod"
			],
			[
				"at",
				"addRaycasterMouseControl\tmethod"
			],
			[
				"getelem",
				"getElementsByTagName\tmethod"
			],
			[
				"d",
				"degreesToRadians\tmethod"
			],
			[
				"rot",
				"rotateX\tmethod"
			],
			[
				"degree",
				"degrees_to_radians"
			],
			[
				"ro",
				"rotateX\tmethod"
			],
			[
				"tileMes",
				"tileMeshGroup\tproperty"
			],
			[
				"tilem",
				"tileMeshGroup\tproperty"
			],
			[
				"ad",
				"addLight\tmethod"
			],
			[
				"red",
				"renderer\tproperty"
			],
			[
				"BoardG",
				"boardGameControls"
			],
			[
				"setup",
				"setupRayCaster"
			],
			[
				"Ray",
				"Raycaster\tclass"
			],
			[
				"ray",
				"raycaster"
			],
			[
				"WebGLRed",
				"WebGLRenderer\talias"
			],
			[
				"pla",
				"placeWhitePieces\tmethod"
			],
			[
				"ches",
				"chessPieceMovementJudgeFactory\tproperty"
			],
			[
				"origi",
				"originPiece\tlet"
			],
			[
				"Boardpi",
				"BoardPieceType\talias"
			],
			[
				"BoardPei",
				"BoardPieceType\talias"
			],
			[
				"desti",
				"destinationPiece\tlet"
			],
			[
				"n",
				"normalize\tmethod"
			],
			[
				"destin",
				"destination\tparameter"
			],
			[
				"Rook",
				"RookMovementJudge\talias"
			],
			[
				"Bishop",
				"BishopMovementJudge\talias"
			],
			[
				"Queen",
				"QueenMovementJudge\talias"
			],
			[
				"queen",
				"QueenMovementJudge"
			],
			[
				"clam",
				"clampScalar\tmethod"
			],
			[
				"Paw",
				"PawnMovementJudge\tscript"
			],
			[
				"Pawn",
				"PawnMovementJudge\talias"
			],
			[
				"first",
				"firstmove\tlet"
			],
			[
				"Bo",
				"BoardPiece\tscript"
			],
			[
				"Movem",
				"MovementJudgeAlwaysTrue\tclass"
			],
			[
				"ori",
				"originPiece\tlet"
			],
			[
				"destina",
				"destinationPiece\tlet"
			],
			[
				"destination",
				"destinationPiece\tparameter"
			],
			[
				"des",
				"destinationPiece"
			],
			[
				"norm",
				"normalizeVectorForPiece"
			],
			[
				"bard",
				"BoardPiece\tscript"
			],
			[
				"bo",
				"BoardPieceType"
			],
			[
				"throw",
				"throwErr\tlet"
			],
			[
				"IsI",
				"IsInRow\tmethod"
			],
			[
				"eq",
				"equal\tproperty"
			],
			[
				"Bor",
				"BoardCoordinate\tscript"
			],
			[
				"equ",
				"equals\tproperty"
			],
			[
				"stock",
				"stockSymbol"
			],
			[
				"back",
				"backToSelector"
			],
			[
				"group",
				"grouped_leads"
			],
			[
				"leads",
				"leads_per_form"
			],
			[
				"leads_per",
				"leads_per_form_paged"
			],
			[
				"click",
				"clickEnabled"
			],
			[
				"EXP",
				"expToLevel"
			],
			[
				"anima",
				"animation-play-state\tproperty"
			],
			[
				"inlin",
				"inline-block\tdisplay"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import AbstractPieceMovementJudgeFactory from '../AbstractPieceMovementJudgeFactory';\nimport IAbstractPieceMovementJudgeFactory from '../IAbstractPieceMovementJudgeFactory';\nimport MovementJudgeFactory from '../MovementJudgeFactory';\nimport IMovementJudgeFactory from '../IMovementJudgeFactory';\nimport BoardGameScene from '../../presentation/BoardGameScene';\nimport ChessMediator from '../chess/ChessMediator';\nimport ChessPieceFactory from '../chess/ChessPieceFactory';\nimport ChessBoardBuilder from '../chess/ChessBoardBuilder';\nimport BoardBuilder from '../BoardBuilder';\nimport BoardPieceFactory from '../BoardPieceFactory';\nimport GameType from '../../models/enums/GameType';\nimport GameMediator from '../GameMediator';\nimport ChessPieceGeometryFactory from '../chess/ChessPieceGeometryFactory';\nimport BoardPieceGeometryFactory from '../BoardPieceGeometryFactory';\nimport ChessPieceMovementJudgeFactory from '../chess/ChessPieceMovementJudgeFactory';\nimport PieceMovementJudgeFactory from '../PieceMovementJudgeFactory';\n\nimport { Container } from \"inversify\";\nimport { IOCTypes } from \"./IOCTypes\";\nimport { interfaces } from \"inversify\";\n\nclass Bootstrapper {\n  private static instance: Bootstrapper | null = null;\n\n  private container: Container;\n\n  private constructor() {\n    this.container = new Container();\n\n    this.container.bind<BoardGameScene>(IOCTypes.BoardGameScene).to(BoardGameScene);\n    this.container.bind<IMovementJudgeFactory>(IOCTypes.MovementJudgeFactory).to(MovementJudgeFactory);\n    \n\n    this.container.bind<PieceMovementJudgeFactory>(IOCTypes.PieceMovementJudgeFactory).to(ChessPieceMovementJudgeFactory).whenTargetNamed(GameType.Chess);\n    this.container.bind<interfaces.Factory<PieceMovementJudgeFactory>>(IOCTypes.AbstractPieceMovementJudgeFactory)\n                  .toFactory<PieceMovementJudgeFactory>((context) => {\n                    return (type: GameType) => {\n                      return context.container.getNamed<PieceMovementJudgeFactory>(IOCTypes.PieceMovementJudgeFactory, type);\n                    };\n                  });\n\n    this.container.bind<BoardPieceGeometryFactory>(IOCTypes.BoardPieceGeometryFactory).to(ChessPieceGeometryFactory).whenTargetNamed(GameType.Chess);\n    this.container.bind<interfaces.Factory<BoardPieceGeometryFactory>>(IOCTypes.AbstractBoardPieceGeometryFactory)\n                  .toFactory<BoardPieceGeometryFactory>((context) => {\n                    return (type: GameType) => {\n                      return context.container.getNamed<BoardPieceGeometryFactory>(IOCTypes.BoardPieceGeometryFactory, type);\n                    };\n                  });\n\n    this.container.bind<GameMediator>(IOCTypes.GameMediator).to(ChessMediator).whenTargetNamed(GameType.Chess);\n    this.container.bind<interfaces.Factory<GameMediator>>(IOCTypes.GameMediatorFactory)\n                  .toFactory<GameMediator>((context) => {\n                    return (type: GameType) => {\n                      return context.container.getNamed<GameMediator>(IOCTypes.GameMediator, type);\n                    };\n                  });\n\n    this.container.bind<BoardBuilder>(IOCTypes.BoardBuilder).to(ChessBoardBuilder).whenTargetNamed(GameType.Chess);\n    this.container.bind<interfaces.Factory<BoardBuilder>>(IOCTypes.BoardBuilderFactory)\n                  .toFactory<BoardBuilder>((context) => {\n                    return (type: GameType) => {\n                      return context.container.getNamed<BoardBuilder>(IOCTypes.BoardBuilder, type);\n                    };\n                  });\n\n    this.container.bind<BoardPieceFactory>(IOCTypes.BoardPieceFactory).to(ChessPieceFactory).whenTargetNamed(GameType.Chess);\n    this.container.bind<interfaces.Factory<BoardPieceFactory>>(IOCTypes.AbstractBoardPieceFactory)\n                  .toFactory<BoardPieceFactory>((context) => {\n                    return (type: GameType) => {\n                      return context.container.getNamed<BoardPieceFactory>(IOCTypes.BoardPieceFactory, type);\n                    };\n                  });\n  }\n\n  public static getContainer() {\n    if (Bootstrapper.instance === null) {\n      Bootstrapper.instance = new Bootstrapper();\n    }\n\n    return Bootstrapper.instance.container;\n  }\n}\n\nexport default Bootstrapper;",
			"file": "src/business/initialization/Bootstrapper.ts",
			"file_size": 4057,
			"file_write_time": 132477330986466491,
			"settings":
			{
				"buffer_size": 4255,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "tests/business/chess/ChessPieceFactory.test.ts",
			"settings":
			{
				"buffer_size": 1097,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/business/chess/ChessPieceFactory.ts",
			"settings":
			{
				"buffer_size": 1493,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/presentation/SceneMediator.ts",
			"settings":
			{
				"buffer_size": 3139,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/business/initialization/IOCTypes.ts",
			"settings":
			{
				"buffer_size": 890,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/business/chess/ChessMediator.ts",
			"settings":
			{
				"buffer_size": 4311,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "tests/mocks/TestMovementJudge.ts",
			"settings":
			{
				"buffer_size": 954,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "npm run build",
	"build_system_choices":
	[
		[
			[
				[
					"npm run build",
					""
				],
				[
					"Packages/TypeScript/TypeScript.sublime-build",
					""
				]
			],
			[
				"npm run build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"githu",
				"Github: Repository"
			],
			[
				"github",
				"Github: Repository"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"pci",
				"Package Control: Install Package"
			],
			[
				"cpi",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/initialization",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/presentation",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks"
	],
	"file_history":
	[
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/ChessStateProcessor.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/ChessMediator.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/GameMediatorFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/GameMediatorFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/ChessPieceFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/BoardBuilderFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/BoardBuilderFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/AbstractBoardPieceGeometryFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/AbstractBoardPieceGeometryFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/ChessBoardFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/BoardPieceFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/initialization/IOCTypes.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessMediator.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/initialization/Bootstrapper.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestAbstractBoardPieceFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/IMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessBoardBuilder.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/AbstractBoardPieceFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessPieceFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/presentation/SceneMediator.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/presentation/BoardGameScene.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessStateProcessor.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/GameStateProcessor.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessPieceMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/GameStateProcessorFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/GameStateProcessorFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/IGameStateProcessorFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges/ChessMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges/KingMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/movementJudges/KingMovementJudge.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestBoardBuilder.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/movementJudges/PawnMovementJudge.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/movementJudges/BishopMovementJudge.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges/PawnMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/movementJudges/QueenMovementJudge.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/movementJudges/RookMovementJudge.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/movementJudges/KnightMovementJudge.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/MovementData.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestBoardBuilderFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges/RookMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges/KnightMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges/QueenMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/movementJudges/BishopMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/MovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessPieceGeometryFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/BoardPiece.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/presentation/BoardGameControls.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/package.json",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/webpack.config.js",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestBoardPieceGeometryFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/built/src/Main.js",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/built/src/index.html",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/BoardPieceGeometryFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestBoardPieceFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/GameMediator.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/BoardBuilder.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestAbstractBoardPieceGeometryFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/AbstractBoardPieceFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/IAbstractBoardPieceGeometryFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/IAbstractBoardPieceFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/models/BoardTile.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/models/BoardPiece.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/BoardTile.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/presentation/WebGlSceneRenderer.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/Main.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/MovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestPieceMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/mocks/TestFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/MovementJudgeFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/PieceMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/IAbstractPieceMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/AbstractPieceMovementJudgeFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/AbstractPieceMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/IGameMediatorFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/IBoardBuilderFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/initialization/IBoardBuilderFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/enums/GameType.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/initialization/Bootstrapper",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/Board.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tsconfig.json",
		"/C/Users/danie/Documents/Repositories/Airistotal.github.io/pages/portfolio.html",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/models/Board.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/Utilities.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/dist/bundle.js",
		"/C/Users/danie/AppData/Roaming/Sublime Text 3/Packages/TypeScript/tsserver/lib.dom.d.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/models/BoardCoordinate.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/BoardCoordinate.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/ChessMovementJudge.Pawn.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/ChessPieceMovementJudgeFactory.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/chess/BishopMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/IChessPieceMovementJudgeFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessBoardFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/BoardFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/chess/ChessMovementJudge.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/ChessBoardFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/node_modules/@types/uuid/index.d.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/ChessMovementJudge.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/tests/business/ChessMediator.test.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/ChessMediator.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/business/PieceFactory.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/enums/BoardPieceType.ts",
		"/C/Users/danie/Documents/Repositories/CheckeredBoardGames/src/models/GamePiece.ts",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/tsconfig.json",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/package.json",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/CheckeredBoardGames.sublime-project",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/env.bat",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/.sublime-project.sublime-workspace",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/.sublime-project",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/src/tests/models/BoardCoordinate.test.ts",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/src/tests/models/BoardTile.test.ts",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/src/tests/models/Board.test.ts",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/src/models/BoardCoordinate.ts",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/src/models/BoardCoordinate.js",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/README.md",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/.gitignore",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/CheckeredBoardGames/tsconfig.json",
		"/C/Users/Daniel/source/repos/CheckeredBoardGames/CheckeredBoardGames/src/models/BoardTile.js",
		"/C/Users/Daniel/source/repos/Airistotal.github.io/pages/stock-ticker.html",
		"/C/Users/Daniel/source/repos/Airistotal.github.io/js/links.js",
		"/C/Users/Daniel/source/repos/Airistotal.github.io/pages/portfolio.html",
		"/C/Users/Daniel/source/repos/Airistotal.github.io/js/stock-ticker.js",
		"/C/Users/Daniel/source/repos/Airistotal.github.io/pages/ticker/ticker.html",
		"/C/Users/Daniel/source/repos/Airistotal.github.io/pages/ticker/js/keyboard.js",
		"/C/Users/Daniel/source/repos/Airistotal.github.io/web.config",
		"/C/Users/Daniel/source/repos/IOT.StockTicker.Web/src/ticker.html",
		"/C/Users/Daniel/source/repos/IOT.StockTicker.Web/src/js/stockselector.js"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"GameType",
			"black",
			");\n",
			"GetPiece",
			"setPiece",
			"GetPiece",
			"();\n",
			"render(",
			"three",
			"\"],\n",
			"2",
			"void",
			"queenMovementJudge"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"getPiece",
			"setPiece",
			"getPiece",
			"kingMovementJudge"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/business/initialization/Bootstrapper.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4255,
						"regions":
						{
						},
						"selection":
						[
							[
								2078,
								2078
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tests/business/chess/ChessPieceFactory.test.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1097,
						"regions":
						{
						},
						"selection":
						[
							[
								1066,
								1066
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/business/chess/ChessPieceFactory.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1493,
						"regions":
						{
						},
						"selection":
						[
							[
								1459,
								1459
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/presentation/SceneMediator.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3139,
						"regions":
						{
						},
						"selection":
						[
							[
								685,
								685
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 126.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/business/initialization/IOCTypes.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 890,
						"regions":
						{
						},
						"selection":
						[
							[
								865,
								865
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/business/chess/ChessMediator.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4311,
						"regions":
						{
						},
						"selection":
						[
							[
								1358,
								1266
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tests/mocks/TestMovementJudge.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 954,
						"regions":
						{
						},
						"selection":
						[
							[
								273,
								273
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 301.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "npm run build",
	"project": "CheckeredBoardGames.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\Daniel\\source\\repos\\CheckeredBoardGames\\.sublime-project.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 300.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
